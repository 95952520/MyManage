package com.xuchen.controller;

import com.xuchen.base.Result;
import javax.servlet.http.HttpServletRequest;
import java.util.List;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.baomidou.mybatisplus.plugins.pagination.PageHelper;
import com.xuchen.base.BaseQuery;
import com.xuchen.controller.base.BaseController;
import com.xuchen.core.annotation.CheckNullUpdate;
import com.xuchen.core.annotation.RequestLog;
import com.xuchen.entity.@ObjEntity@;
import com.xuchen.entity.base.MyEntityWrapper;
import com.xuchen.service.@ClassService@;
import com.xuchen.util.MyUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.ArrayList;

@Controller
@RequestMapping("@classMapping@")
public class @ClassController@ extends BaseController {


    @Autowired
    @ClassService@ @Service@;

    @GetMapping(value = "")
    String index(HttpServletRequest request) {
        setAttributeEnums(request);
        return "@htmlPackage@/@htmlUrl@-list";
    }

    @GetMapping("list")
    @ResponseBody
    Result list(BaseQuery baseQuery, @ObjEntity@ myEntity, String params) {
        if (MyUtils.isNotEmpty(params)) {
            myEntity = JSONObject.parseObject(params).toJavaObject(@ObjEntity@.class);
        }
        MyEntityWrapper wrapper = new MyEntityWrapper(baseQuery, myEntity);
//        wrapper.eq("id").like("user_name");
        List<@ObjEntity@> list = @Service@.selectList(wrapper);
        return Result.success(PageHelper.freeTotal(), list);
    }

//  @CheckNullUpdate("")
    @PostMapping("editText")
    @ResponseBody
    @RequestLog
    Result editText(@ObjEntity@ myEntity){
        @Service@.updateById(myEntity);
        return Result.success();
    }

    @GetMapping(value = "toAdd")
    String toAdd(HttpServletRequest request) {
        setAttributeEnums(request);
        return "@htmlPackage@/@htmlUrl@-add";
    }

    @PostMapping("doAdd")
    @ResponseBody
    @RequestLog
    Result doAdd(@ObjEntity@ myEntity) {
//        myEntity.setCreateUser(getSessionUserName());
        @Service@.insert(myEntity);
        return Result.success();
    }

    @GetMapping(value = "toEdit")
    String toEdit(@ObjEntity@ myEntity, HttpServletRequest request) {
        setAttributeEnums(request);
        request.setAttribute("myEntity", @Service@.selectById(myEntity));
        return "@htmlPackage@/@htmlUrl@-edit";
    }

    @PostMapping("doEdit")
    @ResponseBody
    @RequestLog
    Result doEdit(@ObjEntity@ myEntity) {
        @Service@.updateById(myEntity);
        return Result.success();
    }

    @PostMapping("delete")
    @ResponseBody
    @RequestLog
    Result delete(@ObjEntity@ myEntity) {
        @Service@.deleteById(myEntity);
        return Result.success();
    }

    @RequestMapping("deleteList")
    @ResponseBody
    @RequestLog
    Result deleteList(String jsonObj) {
//        List<@ObjEntity@> list = JSONArray.parseArray(jsonObj,@ObjEntity@.class);
//        List<Integer> ids = new ArrayList<>();
//        for(@ObjEntity@ obj : list) {
//            ids.add(obj.getId());
//        }
//        @Service@.deleteBatchIds(ids);
        return Result.success();
    }

    private void setAttributeEnums(HttpServletRequest request) {
//        request.setAttribute("menuType", MenuTypeEnum.getMap());
    }
}